" set space as leader key
let mapleader=" "

" plugins
set commentary
set highlightedyank
set surround
set NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

" vim options
set clipboard+=unnamed
set nohlsearch
set number relativenumber " show line numbers
set scrolloff=5 " show a few lines of context around the cursor
set incsearch " do incremental searching.
set ignorecase " ignore case in search patterns
set incsearch " show where search pattern typed so far matches...
set smartcase " ...but don't ignore case when pattern is uppercase

" join lines smartly
set ideajoin

" mappings
" don't use Ex mode, use Q for formatting.
map Q gq

" git
nmap <leader>m <Action>(Git.Menu)

" refactoring
nmap <leader>i <Action>(Generate)
nmap <leader>rn <Action>(RenameElement)
nmap ,i <Action>(OptimizeImports)
nmap <leader>lf <Action>(ReformatCode)

" navigation
nmap <leader>o <Action>(FileStructurePopup)
nmap <leader>ff <Action>(GotoFile)
"nmap <leader>fi <Action>(GotoImplementation)
nmap <leader>fw <Action>(FindUsages)
nmap <leader>c <Action>(GotoClass)
nmap ]m <Action>(MethodDown)
nmap [m <Action>(MethodUp)

" quickly move between windows
nmap <c-h> <c-w>h
nmap <c-l> <c-w>l
nmap <c-k> <c-w>k
nmap <c-j> <c-w>j

nmap <leader>Q <Action>(ReopenClosedTab)

" total focus
nmap ,z <Action>(HideAllWindows)
nmap <leader>,z <Action>(ToggleDistractionFreeMode)

" run code
nmap \R <Action>(Run)
nmap \r <Action>(RunClass)
nmap \s <Action>(Stop)
nmap <leader>t <Action>(ActivateTerminalToolWindow)

" debug code
nmap \b <Action>(ToggleLineBreakpoint)
nmap \d <Action>(Debug)

" use built-ins!
nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)

nmap / <Action>(Find)

" useful
nmap ,, <Action>(QuickJavaDoc)
nmap <C-=> <Action>(EditorIncreaseFontSize)
nmap <C--> <Action>(EditorDecreaseFontSize)

" plugin mappings
map <leader>e :NERDTree<CR>
map <leader>ef :NERDTreeFind<CR>